---
kind: pipeline
type: docker
name: build

steps:
- name: publish-docker
  image: plugins/docker
  network_mode: registry-network
  settings:
    dockerfile: App/Dockerfile
    repo: registry:5000/ringring-service
    registry: registry:5000
    insecure: true
- name: publish-docker-invoices
  image: plugins/docker
  network_mode: registry-network
  settings:
    dockerfile: InvoiceApp/Dockerfile
    repo: registry:5000/ringring-service-invoices
    registry: registry:5000
    insecure: true
- name: publish-docker-postgres
  image: plugins/docker
  network_mode: registry-network
  settings:
    dockerfile: Postgres/Dockerfile
    repo: registry:5000/ringring-service-postgres
    registry: registry:5000
    insecure: true

trigger:
  branch:
  - master
  - test
  event:
  - push

---
kind: pipeline
type: docker
name: test

steps:
- name: wait-for-services
  image: docker:dind
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  commands:
  - ./utils/wait-for-services.sh
- name: integration-tests
  image: python
  environment:
    SERVICE_HOST: invoices
    TESTING_HOST: integration-tests
  commands:
  - pip install --upgrade pip && pip install -r integration-tests/requirements.txt
  - pytest --tb=short -l -m "not no_pipeline_support"
- name: trigger-vm-image-creation
  image: plugins/downstream
  settings:
    server: https://droneci.sect.tu-berlin.de
    token:
      from_secret: trigger_token
    fork: true
    repositories:
      - FlorianNachtigall/drone-testing
      - enowars/Enowars4DevOps

services:
- name: ringring
  image: localhost:5000/ringring-service
  environment:
    PGPASSWORD: mysecretpassword
    PGHOST: postgres
- name: invoices
  image: localhost:5000/ringring-service-invoices
- name: postgres
  image: localhost:5000/ringring-service-postgres
  environment:
    POSTGRES_PASSWORD: mysecretpassword
    POSTGRES_USER: ringring
    POSTGRES_DB: service

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

depends_on:
- build